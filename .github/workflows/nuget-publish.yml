name: Publish NuGet Package

on:
  push:
    branches:
      - master  # Triggers on master branch pushes
    tags:
      - 'v*.*.*'  # Triggers on version tags like v1.0.0, v1.2.3, etc.
  workflow_dispatch:  # Allows manual trigger

jobs:
  publish:
    runs-on: ubuntu-latest
    name: Build and Publish
    permissions:
      contents: write
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Setup .NET
      uses: actions/setup-dotnet@v5
      with:
        dotnet-version: '9.0.x'

    - name: Extract version from tag
      id: get_version
      run: |
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "Using version from tag: $VERSION"
        else
          VERSION="3.0.1-preview-$(date +%Y%m%d%H%M%S)"
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "Using preview version: $VERSION"
        fi

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Test
      run: dotnet test --configuration Release --no-build --verbosity normal

    - name: Pack NuGet package v${{ steps.get_version.outputs.VERSION }}
      run: dotnet pack Marventa.Framework/Marventa.Framework.csproj --configuration Release --no-build --output ./nupkgs -p:PackageVersion=${{ steps.get_version.outputs.VERSION }}

    - name: Publish v${{ steps.get_version.outputs.VERSION }} to NuGet.org
      run: |
        echo "ðŸ“¦ Publishing Marventa.Framework version ${{ steps.get_version.outputs.VERSION }} to NuGet.org"
        dotnet nuget push ./nupkgs/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
        echo "âœ… Successfully published version ${{ steps.get_version.outputs.VERSION }}"

    - name: Upload artifacts
      uses: actions/upload-artifact@v4.6.2
      with:
        name: nuget-package-${{ steps.get_version.outputs.VERSION }}
        path: ./nupkgs/*.nupkg

    - name: Create GitHub Release v${{ steps.get_version.outputs.VERSION }}
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ github.ref_name }}
        name: Marventa Framework v${{ steps.get_version.outputs.VERSION }}
        body: |
          ## ðŸš€ Marventa Framework ${{ steps.get_version.outputs.VERSION }}

          ### âœ¨ New Features
          - **CDN Service Integration**: Complete implementations for Azure, AWS, and CloudFlare
          - **Saga Pattern**: Distributed transaction orchestration with compensation
          - **Repository Pattern**: Enhanced with caching integration

          ### ðŸ“¦ Installation
          ```bash
          dotnet add package Marventa.Framework --version ${{ steps.get_version.outputs.VERSION }}
          ```

          ### ðŸ“– Documentation
          See [README](https://github.com/${{ github.repository }}/blob/master/README.md) for usage examples.
        draft: false
        prerelease: false
        files: ./nupkgs/*.nupkg